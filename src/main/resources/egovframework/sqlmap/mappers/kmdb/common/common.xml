<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.ag.homepage.common.service.CommonDao">

	<resultMap id="noticeMap" type="egovMap">
        <result property="contentDesc" column="CONTENT_DESC" javaType="java.lang.String" jdbcType="CLOB"/>
    </resultMap>

	<sql id="countHeaderQuery">
		SELECT COUNT(1) AS TOTAL_COUNT FROM (
    </sql>

    <sql id="countTailQuery">
        )
    </sql>

    <sql id="pagingHeaderQuery">
		SELECT * FROM (SELECT ROWNUM AS RNUM, Z.* FROM (
    </sql>

    <sql id="pagingTailQuery">
        ) Z WHERE ROWNUM &lt;= #{_page} * #{_pageSize}) WHERE RNUM &gt; (#{_page} - 1) * #{_pageSize}
    </sql>

    <sql id="selectNoticeListQuery">
		SELECT BOARD_SEQ
				 , TITLE
				 , TO_CHAR(CREATE_DATE,'YYYY-MM-DD') CREATE_DATE
				 , READ_COUNT
		  FROM TB_KMDB_BOARD
		WHERE 1=1

		<if test="searchText != null and searchText != ''">
            <choose>
			    <when test="searchType.equalsIgnoreCase('subject')">
			    AND TITLE LIKE '%' || #{searchText} || '%'
			    </when>
			    <when test="searchType.equalsIgnoreCase('composition')">
			    AND CONTENT_DESC LIKE '%' || #{searchText} || '%'
			    </when>
			    <otherwise>
			    AND (TITLE LIKE '%' || #{searchText} || '%' OR CONTENT_DESC LIKE '%' || #{searchText} || '%')
			    </otherwise>
			</choose>
		</if>

		 ORDER BY BOARD_SEQ DESC
    </sql>

    <select id="selectNoticeListCount" parameterType="hashMap" resultType="int">
        <include refid="countHeaderQuery" />
        <include refid="selectNoticeListQuery"/>
        <include refid="countTailQuery" />
    </select>

    <select id="selectNoticePageList" parameterType="hashMap" resultType="egovMap">
        <include refid="pagingHeaderQuery" />
        <include refid="selectNoticeListQuery"/>
        <include refid="pagingTailQuery" />
    </select>

    <select id="selectNoticeInfo" parameterType="long" resultMap="noticeMap">
		SELECT TITLE
				 , TO_CHAR(CREATE_DATE,'YYYY-MM-DD') CREATE_DATE
				 , READ_COUNT
				 , CONTENT_DESC
		  FROM TB_KMDB_BOARD
		WHERE BOARD_SEQ = #{seq}
    </select>

    <update id="updateNoticeReadCount" parameterType="long" >
		UPDATE TB_KMDB_BOARD
		     SET READ_COUNT = READ_COUNT+1
		 WHERE BOARD_SEQ = #{seq}
    </update>

	<sql id="selectMainQuery">
        SELECT *
        FROM (
	        SELECT A.MAIN_CONTENT_ID
	              ,A.CONTENT_TYPE_CD
	              ,	CASE A.CONTENT_TYPE_CD
					WHEN 'HOME_TOP_1'	 THEN '1'
					WHEN 'HOME_TOP_2'	 THEN '2'
					WHEN 'HOME_TOP_3'	 THEN '3'
					ELSE		'0'
					END AS ORDER_SEQ
	              ,A.UP_MAIN_CONTENT_ID
	              ,CASE CONTENT_TYPE_CD
	                   WHEN 'MOVIE' THEN B.TITLE
	                   WHEN 'VOD_MULTI' THEN B.TITLE
	                   WHEN 'STORY' THEN C.TITLE
	                   WHEN 'STORY_HEAD' THEN C.TITLE
	                   WHEN 'DB_FESTIVAL' THEN D.NAME_KOR
	                   WHEN 'DB_THEME' THEN E.KEYWORDNAME
	                   WHEN 'DB_LIST' THEN F.MOVIELIST_NAME
	                   WHEN 'VOD_PLAN' THEN G.TITLE
	                   ELSE A.TITLE
	               END
	                   AS TITLE
	              ,CASE CONTENT_TYPE_CD
	                   WHEN 'DB_LIST' THEN
	                       (SELECT (SELECT MOVIELIST_NAME
	                                FROM MOVIELIST
	                                WHERE MOVIELIST_NO = SUBSTR(X.MOVIELIST_NO, 0, 2))
	                        FROM MOVIELIST X
	                        WHERE MOVIELIST_ID = A.KEY1)
	                   ELSE
	                       A.SUB_TITLE
	               END
	                   AS SUB_TITLE
	              ,A.CONTENT_DESC
	              ,A.URL
	              ,A.SORT_NO
	              ,A.ACTIVE_YN
	              ,A.KEY1
	              ,A.KEY2
	              ,A.KEY3
	              ,A.FILE_ALT
	              ,A.ORG_FILE_NAME
	              ,A.FILE_NAME
	              ,B.DIRECTOR AS MOVIE_DIRECTOR
	              ,B.PROD_YEAR AS MOVEI_PRODYEAR
	              ,C.WRITER AS STORY_WRITER
	              ,NVL(H.RUNTIME, 0) AS MULTI_RUN_MIN
	              ,NVL(H.SECONDS, 0) AS MULTI_RUN_SEC
	              ,CASE H.MSCREEN_CLSS
	                   WHEN '1' THEN B.TITLE || ' ' || H.TITLE_ETC || ' 예고편'
	                   WHEN '2' THEN B.TITLE || ' ' || H.TITLE_ETC
	               END
	                   AS MULTI_TITLE
	        FROM TB_MAIN_CONTENT A
	             LEFT OUTER JOIN MOVIE_SE B
	                 ON A.KEY1 = B.MOVIE_ID
	                    AND A.KEY2 = B.MOVIE_SEQ
			     LEFT OUTER JOIN (SELECT A.STORY_SEQ
			                            ,A.TITLE
			                            ,A.WRITER_SEQ
			                            ,B.WRITER
			                      FROM TB_MOVIE_STORY A INNER JOIN TBL_WRITER B ON A.WRITER_SEQ = B.SEQ) C
			         ON A.KEY1 = TO_CHAR(C.STORY_SEQ)
	            LEFT OUTER JOIN TBLFESTIVAL D ON A.KEY1 = TO_CHAR(D.FE_NO)
	            LEFT OUTER JOIN KEYWORD_EXPERT E ON A.KEY1 = TO_CHAR(E.IDX)
	            LEFT OUTER JOIN MOVIELIST F ON A.KEY1 = TO_CHAR(F.MOVIELIST_ID)
	            LEFT OUTER JOIN TB_PLAN G ON A.KEY1 = TO_CHAR(G.PLAN_SEQ)
	            LEFT OUTER JOIN MULTI_NEW H ON A.KEY3 = TO_CHAR(H.MUL_ID)
        ) A
    </sql>

    <select id="selectMainList" parameterType="hashMap" resultType="egovMap">
        <include refid="selectMainQuery" />
        WHERE A.CONTENT_TYPE_CD IN ('HOME_TOP_1', 'HOME_TOP_2', 'HOME_TOP_3')
        ORDER BY ORDER_SEQ
    </select>

    <select id="selectMainInfo" parameterType="string" resultType="egovMap">
        <include refid="selectMainQuery" />
        WHERE A.CONTENT_TYPE_CD = #{contentTypeCd}
    </select>

    <select id="selectMainSubList" parameterType="long" resultType="egovMap">
        <include refid="selectMainQuery"/>
		WHERE A.UP_MAIN_CONTENT_ID = #{upMainContentId}
		    AND A.ACTIVE_YN = 'Y'
		ORDER BY A.SORT_NO ASC, A.MAIN_CONTENT_ID DESC
    </select>

	<select id="selectMovieMenuList"  resultType="egovMap">
	SELECT STORY_DIV_SEQ
			 , UP_STORY_DIV_SEQ
			 , DEPTH
			 , SORT_NO
			 , TITLE
        	 , DECODE(CONNECT_BY_ISLEAF,'0','Y','N') LEAF_YN
			 , LEVEL LEVEL_NUM
	  FROM TB_MOVIE_STORY_DIV
	WHERE ACTIVE_YN = 'Y' AND END_YN = 'N'
	 START WITH DEPTH = '1' CONNECT BY PRIOR STORY_DIV_SEQ=UP_STORY_DIV_SEQ
	</select>

</mapper>